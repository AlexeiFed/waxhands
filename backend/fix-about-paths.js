/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç–µ–π –∫ –º–µ–¥–∏–∞-—Ñ–∞–π–ª–∞–º about
 */

const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({
    host: process.env.DB_HOST || 'localhost',
    port: parseInt(process.env.DB_PORT || '5432'),
    database: process.env.DB_NAME || 'waxhands',
    user: process.env.DB_USER || 'postgres',
    password: process.env.DB_PASSWORD,
    ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false,
});

async function fixAboutPaths() {
    try {
        console.log('üîÑ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π –∫ –º–µ–¥–∏–∞-—Ñ–∞–π–ª–∞–º...');

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –º–µ–¥–∏–∞-—Ñ–∞–π–ª–∞–º
        await pool.query(`
            UPDATE about_media 
            SET file_path = '/src/assets/about/demo-video-1.mp4'
            WHERE filename = 'demo-video-1.mp4'
        `);

        await pool.query(`
            UPDATE about_media 
            SET file_path = '/src/assets/about/demo-video-2.mp4'
            WHERE filename = 'demo-video-2.mp4'
        `);

        console.log('‚úÖ –ü—É—Ç–∏ –∫ –º–µ–¥–∏–∞-—Ñ–∞–π–ª–∞–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const { rows } = await pool.query('SELECT * FROM about_media ORDER BY id ASC');
        console.log('üìã –¢–µ–∫—É—â–∏–µ –º–µ–¥–∏–∞-—Ñ–∞–π–ª—ã:');
        rows.forEach(row => {
            console.log(`  - ${row.title}: ${row.file_path}`);
        });

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –ø—É—Ç–µ–π:', error);
    } finally {
        await pool.end();
    }
}

fixAboutPaths();

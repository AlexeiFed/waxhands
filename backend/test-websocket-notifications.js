/**
 * @file: backend/test-websocket-notifications.js
 * @description: –¢–µ—Å—Ç –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 * @created: 2024-12-19
 */

import WebSocket from 'ws';

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ç–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function testAllNotifications() {
    console.log('üîå –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ç–∏–ø—ã WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');

    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const userWs = new WebSocket('ws://localhost:3001/api/chat/ws?userId=test-user-123&isAdmin=false');

    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    const adminWs = new WebSocket('ws://localhost:3001/api/chat/ws?userId=admin-123&isAdmin=true');

    let userConnected = false;
    let adminConnected = false;

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userWs.on('open', () => {
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∫–ª—é—á–µ–Ω');
        userConnected = true;

        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∫–∞–Ω–∞–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        userWs.send(JSON.stringify({
            type: 'subscribe',
            channels: ['user:test-user-123', 'chat:test-chat-123']
        }));
    });

    userWs.on('message', (data) => {
        try {
            const message = JSON.parse(data.toString());
            console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª:', message.type, message.data);
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    adminWs.on('open', () => {
        console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω');
        adminConnected = true;

        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∫–∞–Ω–∞–ª—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        adminWs.send(JSON.stringify({
            type: 'subscribe',
            channels: ['admin:all', 'system:all', 'chat:test-chat-123']
        }));
    });

    adminWs.on('message', (data) => {
        try {
            const message = JSON.parse(data.toString());
            console.log('üë®‚Äçüíº –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ–ª—É—á–∏–ª:', message.type, message.data);
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error);
        }
    });

    // –ñ–¥–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –æ–±–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
    const checkConnections = setInterval(() => {
        if (userConnected && adminConnected) {
            console.log('üéØ –û–±–∞ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã, –Ω–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...');
            clearInterval(checkConnections);

            // –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ HTTP API
            testNotifications();
        }
    }, 100);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    userWs.on('error', (error) => console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error));
    adminWs.on('error', (error) => console.error('‚ùå –û—à–∏–±–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error));

    // –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
    setTimeout(() => {
        console.log('üîÑ –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...');
        userWs.close();
        adminWs.close();
        process.exit(0);
    }, 10000);
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ HTTP API
async function testNotifications() {
    try {
        console.log('üì° –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ HTTP API...');

        // –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —á–∞—Ç–µ
        await fetch('http://localhost:3001/api/chat/test-notification', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                type: 'chat_message',
                chatId: 'test-chat-123',
                message: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
                senderId: 'test-user-123',
                senderType: 'user'
            })
        });

        console.log('‚úÖ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —á–∞—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testAllNotifications();

/**
 * @file: check-schools.ts
 * @description: –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü—ã schools –∏ –¥–∞–Ω–Ω—ã—Ö –≤ –Ω–µ–π
 * @dependencies: connection.ts
 * @created: 2024-12-19
 */
import pool from './connection.js';
const checkSchools = async () => {
    const client = await pool.connect();
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É schools...');
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã schools
        const schemaResult = await client.query(`
            SELECT column_name, data_type, is_nullable, column_default
            FROM information_schema.columns 
            WHERE table_name = 'schools'
            ORDER BY ordinal_position
        `);
        console.log('üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã schools:');
        schemaResult.rows.forEach(row => {
            console.log(`  - ${row.column_name}: ${row.data_type} (nullable: ${row.is_nullable}, default: ${row.column_default})`);
        });
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        const countResult = await client.query(`SELECT COUNT(*) FROM schools`);
        console.log(`\nüìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∫–æ–ª –≤ —Ç–∞–±–ª–∏—Ü–µ: ${countResult.rows[0].count}`);
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–∑—Ü—ã –¥–∞–Ω–Ω—ã—Ö
        if (parseInt(countResult.rows[0].count) > 0) {
            console.log('\nüîç –û–±—Ä–∞–∑—Ü—ã –¥–∞–Ω–Ω—ã—Ö —à–∫–æ–ª:');
            const dataResult = await client.query(`
                SELECT id, name, address, classes
                FROM schools 
                LIMIT 5
            `);
            dataResult.rows.forEach((row, index) => {
                console.log(`  ${index + 1}. ID: ${row.id}`);
                console.log(`     –ù–∞–∑–≤–∞–Ω–∏–µ: ${row.name}`);
                console.log(`     –ê–¥—Ä–µ—Å: ${row.address || 'NULL'}`);
                console.log(`     –ö–ª–∞—Å—Å—ã: ${row.classes ? JSON.stringify(row.classes) : 'NULL'}`);
                console.log('');
            });
        }
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —à–∫–æ–ª—ã —Å –∞–¥—Ä–µ—Å–∞–º–∏
        const addressResult = await client.query(`
            SELECT COUNT(*) 
            FROM schools 
            WHERE address IS NOT NULL AND address != ''
        `);
        console.log(`üè´ –®–∫–æ–ª —Å –∞–¥—Ä–µ—Å–∞–º–∏: ${addressResult.rows[0].count}`);
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —à–∫–æ–ª—ã —Å –∫–ª–∞—Å—Å–∞–º–∏
        const classesResult = await client.query(`
            SELECT COUNT(*) 
            FROM schools 
            WHERE classes IS NOT NULL AND array_length(classes, 1) > 0
        `);
        console.log(`üìö –®–∫–æ–ª —Å –∫–ª–∞—Å—Å–∞–º–∏: ${classesResult.rows[0].count}`);
    }
    catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —à–∫–æ–ª:', error);
        throw error;
    }
    finally {
        client.release();
    }
};
// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
checkSchools()
    .then(() => {
    console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∫–æ–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    process.exit(0);
})
    .catch((error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —à–∫–æ–ª:', error);
    process.exit(1);
});
export { checkSchools };
//# sourceMappingURL=check-schools.js.map
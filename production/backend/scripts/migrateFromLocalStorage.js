import pool from '../database/connection.js';
// –î–∞–Ω–Ω—ã–µ –∏–∑ localStorage (–∫–æ–ø–∏—Ä—É–µ–º –∏–∑ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞)
const localStorageData = {
    users: [
        {
            id: "user-1234567890",
            name: "–ò–≤–∞–Ω",
            surname: "–ò–≤–∞–Ω–æ–≤",
            role: "parent",
            phone: "+79991234567",
            schoolId: "1",
            schoolName: "–ì–∏–º–Ω–∞–∑–∏—è ‚Ññ 8",
            class: "3–ê",
            createdAt: "2024-12-19T10:30:00.000Z"
        }
    ],
    schools: [
        {
            id: "1",
            name: "–ì–∏–º–Ω–∞–∑–∏—è ‚Ññ 8",
            address: "–•–∞–±–∞—Ä–æ–≤—Å–∫, –£–ª. –¢–∏—Ö–æ–æ–∫–µ–∞–Ω—Å–∫–∞—è 169–ê",
            classes: ["1–ê", "1–ë", "1–í", "2–ê", "2–ë", "2–í", "3–ê", "3–ë", "3–í", "4–ê", "4–ë", "4–í"],
            teacher: "–ò–≤–∞–Ω–æ–≤–∞ –ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–Ω–∞",
            teacherPhone: "+7 (4212) 123-45-67",
            notes: "–ì–∏–º–Ω–∞–∑–∏—è —Å —É–≥–ª—É–±–ª–µ–Ω–Ω—ã–º –∏–∑—É—á–µ–Ω–∏–µ–º –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤"
        },
        {
            id: "2",
            name: "–®–∫–æ–ª–∞ ‚Ññ 12",
            address: "–•–∞–±–∞—Ä–æ–≤—Å–∫, –£–ª. –õ–µ–Ω–∏–Ω–∞ 45",
            classes: ["1–ê", "1–ë", "2–ê", "2–ë", "3–ê", "3–ë", "4–ê", "4–ë"],
            teacher: "–ü–µ—Ç—Ä–æ–≤–∞ –ê–Ω–Ω–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞",
            teacherPhone: "+7 (4212) 234-56-78",
            notes: "–®–∫–æ–ª–∞ —Å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —É–∫–ª–æ–Ω–æ–º"
        },
        {
            id: "3",
            name: "–õ–∏—Ü–µ–π ‚Ññ 3",
            address: "–•–∞–±–∞—Ä–æ–≤—Å–∫, –£–ª. –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞ 78",
            classes: ["1–ê", "1–ë", "1–í", "2–ê", "2–ë", "2–í", "3–ê", "3–ë", "3–í", "4–ê", "4–ë", "4–í"],
            teacher: "–°–∏–¥–æ—Ä–æ–≤–∞ –ï–ª–µ–Ω–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞",
            teacherPhone: "+7 (4212) 345-67-89",
            notes: "–õ–∏—Ü–µ–π —Å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–Ω–∞—É—á–Ω—ã–º –ø—Ä–æ—Ñ–∏–ª–µ–º"
        },
        {
            id: "4",
            name: "–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ ‚Ññ 15",
            address: "–•–∞–±–∞—Ä–æ–≤—Å–∫, –£–ª. –ü—É—à–∫–∏–Ω–∞ 23",
            classes: ["–ú–ª–∞–¥—à–∞—è –≥—Ä—É–ø–ø–∞", "–°—Ä–µ–¥–Ω—è—è –≥—Ä—É–ø–ø–∞", "–°—Ç–∞—Ä—à–∞—è –≥—Ä—É–ø–ø–∞", "–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω–∞—è –≥—Ä—É–ø–ø–∞"],
            teacher: "–ö–æ–∑–ª–æ–≤–∞ –û–ª—å–≥–∞ –ù–∏–∫–æ–ª–∞–µ–≤–Ω–∞",
            teacherPhone: "+7 (4212) 456-78-90",
            notes: "–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ —Å –ª–æ–≥–æ–ø–µ–¥–∏—á–µ—Å–∫–∏–º–∏ –≥—Ä—É–ø–ø–∞–º–∏"
        },
        {
            id: "5",
            name: "–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ ‚Ññ 8",
            address: "–•–∞–±–∞—Ä–æ–≤—Å–∫, –£–ª. –ì–∞–≥–∞—Ä–∏–Ω–∞ 56",
            classes: ["–ú–ª–∞–¥—à–∞—è –≥—Ä—É–ø–ø–∞", "–°—Ä–µ–¥–Ω—è—è –≥—Ä—É–ø–ø–∞", "–°—Ç–∞—Ä—à–∞—è –≥—Ä—É–ø–ø–∞", "–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω–∞—è –≥—Ä—É–ø–ø–∞"],
            teacher: "–ú–æ—Ä–æ–∑–æ–≤–∞ –¢–∞—Ç—å—è–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞",
            teacherPhone: "+7 (4212) 567-89-01",
            notes: "–î–µ—Ç—Å–∫–∏–π —Å–∞–¥ —Å —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ-—ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–∏–º —Ä–∞–∑–≤–∏—Ç–∏–µ–º"
        }
    ],
    services: [
        {
            id: "service-1",
            name: "–ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –≤–æ—Å–∫–æ–≤—ã—Ö —Ä—É–∫",
            description: "–°–æ–∑–¥–∞–Ω–∏–µ –≤–æ—Å–∫–æ–≤—ã—Ö —Å–ª–µ–ø–∫–æ–≤ —Ä—É–∫ —Ä–µ–±–µ–Ω–∫–∞",
            price: 1500.00,
            duration: 30,
            category: "–í–æ—Å–∫–æ–≤—ã–µ —Å–ª–µ–ø–∫–∏",
            isActive: true
        },
        {
            id: "service-2",
            name: "–ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –≤–æ—Å–∫–æ–≤—ã—Ö –Ω–æ–≥",
            description: "–°–æ–∑–¥–∞–Ω–∏–µ –≤–æ—Å–∫–æ–≤—ã—Ö —Å–ª–µ–ø–∫–æ–≤ –Ω–æ–≥ —Ä–µ–±–µ–Ω–∫–∞",
            price: 1200.00,
            duration: 25,
            category: "–í–æ—Å–∫–æ–≤—ã–µ —Å–ª–µ–ø–∫–∏",
            isActive: true
        },
        {
            id: "service-3",
            name: "–ö–æ–º–ø–ª–µ–∫—Ç —Ä—É–∫–∞+–Ω–æ–≥–∞",
            description: "–°–æ–∑–¥–∞–Ω–∏–µ –≤–æ—Å–∫–æ–≤—ã—Ö —Å–ª–µ–ø–∫–æ–≤ —Ä—É–∫ –∏ –Ω–æ–≥ —Ä–µ–±–µ–Ω–∫–∞",
            price: 2500.00,
            duration: 45,
            category: "–í–æ—Å–∫–æ–≤—ã–µ —Å–ª–µ–ø–∫–∏",
            isActive: true
        },
        {
            id: "service-4",
            name: "–ü–æ–∫—Ä–∞—Å–∫–∞ —Å–ª–µ–ø–∫–æ–≤",
            description: "–ü–æ–∫—Ä–∞—Å–∫–∞ –≥–æ—Ç–æ–≤—ã—Ö –≤–æ—Å–∫–æ–≤—ã—Ö —Å–ª–µ–ø–∫–æ–≤",
            price: 500.00,
            duration: 20,
            category: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏",
            isActive: true
        },
        {
            id: "service-5",
            name: "–£–ø–∞–∫–æ–≤–∫–∞ –≤ –∫–æ—Ä–æ–±–∫—É",
            description: "–ö—Ä–∞—Å–∏–≤–∞—è —É–ø–∞–∫–æ–≤–∫–∞ –≥–æ—Ç–æ–≤—ã—Ö —Å–ª–µ–ø–∫–æ–≤",
            price: 300.00,
            duration: 10,
            category: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏",
            isActive: true
        }
    ],
    masterClasses: [
        {
            id: "master-1",
            name: "–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –≤–æ—Å–∫–æ–≤—ã—Ö —Å–ª–µ–ø–∫–æ–≤",
            description: "–û–±—É—á–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤–æ—Å–∫–æ–≤—ã—Ö —Å–ª–µ–ø–∫–æ–≤ —Ä—É–∫ –∏ –Ω–æ–≥",
            price: 3000.00,
            duration: 120,
            maxParticipants: 10,
            materials: ["–í–æ—Å–∫", "–§–æ—Ä–º—ã", "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"],
            isActive: true
        },
        {
            id: "master-2",
            name: "–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ –ø–æ–∫—Ä–∞—Å–∫–µ —Å–ª–µ–ø–∫–æ–≤",
            description: "–û–±—É—á–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫–∞–º –ø–æ–∫—Ä–∞—Å–∫–∏ –∏ –¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –≤–æ—Å–∫–æ–≤—ã—Ö —Å–ª–µ–ø–∫–æ–≤",
            price: 2000.00,
            duration: 90,
            maxParticipants: 8,
            materials: ["–ö—Ä–∞—Å–∫–∏", "–ö–∏—Å—Ç–∏", "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã", "–ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç"],
            isActive: true
        },
        {
            id: "master-3",
            name: "–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ —É–ø–∞–∫–æ–≤–∫–µ",
            description: "–û–±—É—á–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—é –∫—Ä–∞—Å–∏–≤–æ–π —É–ø–∞–∫–æ–≤–∫–∏ –¥–ª—è –≥–æ—Ç–æ–≤—ã—Ö –∏–∑–¥–µ–ª–∏–π",
            price: 1500.00,
            duration: 60,
            maxParticipants: 12,
            materials: ["–ë—É–º–∞–≥–∞", "–õ–µ–Ω—Ç—ã", "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã", "–ö–æ—Ä–æ–±–∫–∏"],
            isActive: true
        }
    ]
};
const migrateData = async () => {
    const client = await pool.connect();
    console.log('üîå Connected to database for data migration');
    try {
        await client.query('BEGIN');
        console.log('üìù Starting data migration from localStorage...');
        // –ú–∏–≥—Ä–∞—Ü–∏—è —à–∫–æ–ª (–µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç)
        console.log('üè´ Migrating schools...');
        for (const school of localStorageData.schools) {
            await client.query(`
        INSERT INTO schools (name, address, classes, teacher, teacher_phone, notes)
        VALUES ($1, $2, $3, $4, $5, $6)
        ON CONFLICT DO NOTHING
      `, [school.name, school.address, JSON.stringify(school.classes), school.teacher, school.teacherPhone, school.notes]);
        }
        console.log('‚úÖ Schools migrated');
        // –ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç)
        console.log('üë• Migrating users...');
        for (const user of localStorageData.users) {
            await client.query(`
        INSERT INTO users (name, surname, role, phone, school_name, class)
        VALUES ($1, $2, $3, $4, $5, $6)
        ON CONFLICT DO NOTHING
      `, [user.name, user.surname, user.role, user.phone, user.schoolName, user.class]);
        }
        console.log('‚úÖ Users migrated');
        // –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ª—É–≥ (–µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç)
        console.log('üõ†Ô∏è Migrating services...');
        for (const service of localStorageData.services) {
            await client.query(`
        INSERT INTO services (name, description, price, duration, category, is_active)
        VALUES ($1, $2, $3, $4, $5, $6)
        ON CONFLICT DO NOTHING
      `, [service.name, service.description, service.price, service.duration, service.category, service.isActive]);
        }
        console.log('‚úÖ Services migrated');
        // –ú–∏–≥—Ä–∞—Ü–∏—è –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–æ–≤ (–µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç)
        console.log('üé® Migrating master classes...');
        for (const masterClass of localStorageData.masterClasses) {
            await client.query(`
        INSERT INTO master_classes (name, description, price, duration, max_participants, materials, is_active)
        VALUES ($1, $2, $3, $4, $5, $6, $7)
        ON CONFLICT DO NOTHING
      `, [masterClass.name, masterClass.description, masterClass.price, masterClass.duration, masterClass.maxParticipants, JSON.stringify(masterClass.materials), masterClass.isActive]);
        }
        console.log('‚úÖ Master classes migrated');
        await client.query('COMMIT');
        console.log('‚úÖ Data migration completed successfully');
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        console.log('üîç Verifying migrated data...');
        const schoolsCount = await client.query('SELECT COUNT(*) FROM schools');
        const usersCount = await client.query('SELECT COUNT(*) FROM users');
        const servicesCount = await client.query('SELECT COUNT(*) FROM services');
        const masterClassesCount = await client.query('SELECT COUNT(*) FROM master_classes');
        console.log('üìä Migrated data summary:');
        console.log(`   Schools: ${schoolsCount.rows[0].count}`);
        console.log(`   Users: ${usersCount.rows[0].count}`);
        console.log(`   Services: ${servicesCount.rows[0].count}`);
        console.log(`   Master Classes: ${masterClassesCount.rows[0].count}`);
    }
    catch (error) {
        await client.query('ROLLBACK');
        console.error('‚ùå Error migrating data:', error);
        throw error;
    }
    finally {
        client.release();
        console.log('üîå Database connection released');
    }
};
const runMigration = async () => {
    try {
        console.log('üîÑ Starting localStorage data migration...');
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        console.log('üîå Testing database connection...');
        const client = await pool.connect();
        await client.query('SELECT NOW()');
        client.release();
        console.log('‚úÖ Database connection successful');
        await migrateData();
        console.log('‚úÖ Migration completed successfully');
    }
    catch (error) {
        console.error('‚ùå Migration failed:', error);
        process.exit(1);
    }
    finally {
        await pool.end();
        console.log('üîå Database pool closed');
    }
};
// –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (process.argv[1] && process.argv[1].includes('migrateFromLocalStorage.ts')) {
    console.log('üöÄ Starting migration script...');
    runMigration();
}
export { migrateData, runMigration };
//# sourceMappingURL=migrateFromLocalStorage.js.map
/**
 * @file: src/components/admin/WorkshopRequestsTab.tsx
 * @description: –í–∫–ª–∞–¥–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏ –Ω–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞
 * @dependencies: useWorkshopRequests, Card, Badge, Button, Dialog, Textarea
 * @created: 2024-12-19
 */

import { useState, useEffect } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { useWorkshopRequests } from '@/hooks/use-workshop-requests';
import { useWorkshopRequestsWebSocket } from '@/hooks/use-workshop-requests-websocket';
import { useSchools } from '@/hooks/use-schools';
import { useToast } from '@/hooks/use-toast';
import { WorkshopRequestWithParent, UpdateWorkshopRequestData, WorkshopRequest, SchoolWithAddress } from '@/types';
import {
    FileText,
    Clock,
    CheckCircle,
    XCircle,
    Trash2,
    Calendar,
    MapPin,
    GraduationCap,
    User,
    Mail,
    AlertCircle,
    Phone
} from 'lucide-react';

export default function WorkshopRequestsTab() {
    console.log('üöÄ WorkshopRequestsTab: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞...');

    const { getAllRequests, updateRequestStatus, deleteRequest, getRequestsStats, loading, error } = useWorkshopRequests();
    const { getSchoolsWithAddresses } = useSchools();
    const { toast } = useToast();

    // WebSocket –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    const { isConnected: wsConnected, sendMessage: wsSendMessage } = useWorkshopRequestsWebSocket(
        'admin',
        true,
        (message) => {
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º WebSocket —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            console.log('üîå WorkshopRequestsTab: –ü–æ–ª—É—á–µ–Ω–æ WebSocket —Å–æ–æ–±—â–µ–Ω–∏–µ:', message);

            if (message.type === 'workshop_request_status_change' || message.type === 'workshop_request_update') {
                console.log('üìã WorkshopRequestsTab: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ —á–µ—Ä–µ–∑ WebSocket, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...');
                loadData();
            } else if (message.type === 'workshop_request_created' || message.type === 'workshop_request_deleted') {
                console.log('üìã WorkshopRequestsTab: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ —á–µ—Ä–µ–∑ WebSocket, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...');
                loadData();
            } else {
                console.log('üîå WorkshopRequestsTab: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è:', message.type);
            }
        }
    );

    const [requests, setRequests] = useState<WorkshopRequestWithParent[]>([]);
    const [schoolsWithAddresses, setSchoolsWithAddresses] = useState<SchoolWithAddress[]>([]);
    const [stats, setStats] = useState<{
        total: number;
        pending: number;
        approved: number;
        rejected: number;
    }>({ total: 0, pending: 0, approved: 0, rejected: 0 });
    const [selectedRequest, setSelectedRequest] = useState<WorkshopRequestWithParent | null>(null);
    const [isStatusOpen, setIsStatusOpen] = useState(false);
    const [statusData, setStatusData] = useState<UpdateWorkshopRequestData>({
        status: 'pending',
        admin_notes: ''
    });
    const [componentError, setComponentError] = useState<string | null>(null);

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
    const [filters, setFilters] = useState({
        city: '',
        school: '',
        classGroup: '',
        status: ''
    });

    // –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
    const uniqueSchools = [...new Set(requests.map(req => req.school_name))].sort();
    const uniqueClassGroups = [...new Set(requests.map(req => req.class_group))].sort();

    // –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ä–æ–¥–∞ –∏–∑ –∞–¥—Ä–µ—Å–æ–≤ —à–∫–æ–ª (–¥–æ –∑–∞–ø—è—Ç–æ–π)
    const getCityFromAddress = (schoolName: string) => {
        // –ò—â–µ–º —à–∫–æ–ª—É –≤ —Å–ø–∏—Å–∫–µ —à–∫–æ–ª —Å –∞–¥—Ä–µ—Å–∞–º–∏
        const school = schoolsWithAddresses.find(s => s.name === schoolName);

        if (school && school.address) {
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –≥–æ—Ä–æ–¥ –∏–∑ –∞–¥—Ä–µ—Å–∞ (–ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ –¥–æ –∑–∞–ø—è—Ç–æ–π)
            const city = school.address.split(',')[0].trim();
            return city;
        }

        // Fallback - –µ—Å–ª–∏ –∞–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
        return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    };

    // –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ –∏–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤ —à–∫–æ–ª
    const uniqueCities = [...new Set(
        schoolsWithAddresses
            .map(school => school.address.split(',')[0].trim())
            .filter(city => city && city !== '')
    )].sort();

    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    console.log('üîç WorkshopRequestsTab: –û—Ç–ª–∞–¥–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:', {
        schoolsWithAddresses: schoolsWithAddresses.length,
        uniqueCities: uniqueCities,
        filters: filters,
        requestsCount: requests.length
    });

    // –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞—Å—Å—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —à–∫–æ–ª—ã
    const getClassesForSchool = (schoolName: string) => {
        if (!schoolName) return [];

        // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫–ª–∞—Å—Å—ã –∏–∑ –ë–î
        const school = schoolsWithAddresses.find(s => s.name === schoolName);
        if (school && school.classes && Array.isArray(school.classes)) {
            return school.classes.sort();
        }

        // Fallback - –ø–æ–ª—É—á–∞–µ–º –∫–ª–∞—Å—Å—ã –∏–∑ –∑–∞—è–≤–æ–∫
        return requests
            .filter(req => req.school_name === schoolName)
            .map(req => req.class_group)
            .filter((value, index, self) => self.indexOf(value) === index)
            .sort();
    };

    // –ü–æ–ª—É—á–∞–µ–º —à–∫–æ–ª—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
    const getSchoolsForCity = (city: string) => {
        if (!city) return uniqueSchools;

        // –§–∏–ª—å—Ç—Ä—É–µ–º —à–∫–æ–ª—ã –ø–æ –≥–æ—Ä–æ–¥—É –∏–∑ –∞–¥—Ä–µ—Å–∞
        return schoolsWithAddresses
            .filter(school => school.address && school.address.split(',')[0].trim() === city)
            .map(school => school.name)
            .sort();
    };

    // –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞—è–≤–∫–∏
    const filteredRequests = requests.filter(request => {
        if (filters.city && getCityFromAddress(request.school_name) !== filters.city) return false;
        if (filters.school && request.school_name !== filters.school) return false;
        if (filters.classGroup && request.class_group !== filters.classGroup) return false;
        if (filters.status && request.status !== filters.status) return false;
        return true;
    });

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –¥–∞–Ω–Ω—ã—Ö
    useEffect(() => {
        if (filters.city && !uniqueCities.includes(filters.city)) {
            setFilters(prev => ({ ...prev, city: '', school: '', classGroup: '' }));
        }
        if (filters.school && !uniqueSchools.includes(filters.school)) {
            setFilters(prev => ({ ...prev, school: '', classGroup: '' }));
        }
        if (filters.classGroup && filters.school) {
            const availableClasses = getClassesForSchool(filters.school);
            if (!availableClasses.includes(filters.classGroup)) {
                setFilters(prev => ({ ...prev, classGroup: '' }));
            }
        }
    }, [requests, filters.city, filters.school, filters.classGroup, uniqueCities, uniqueSchools]);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    useEffect(() => {
        console.log('üöÄ WorkshopRequestsTab: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω, WebSocket —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', wsConnected);
        console.log('üöÄ WorkshopRequestsTab: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const authToken = localStorage.getItem('authToken');
        if (!authToken) {
            console.error('‚ùå WorkshopRequestsTab: –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
            setComponentError('–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–Ω–æ–≤–æ.');
            return;
        }

        console.log('‚úÖ WorkshopRequestsTab: –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...');
        console.log('üîç WorkshopRequestsTab: –î–ª–∏–Ω–∞ —Ç–æ–∫–µ–Ω–∞:', authToken.length);
        console.log('üîç WorkshopRequestsTab: –ù–∞—á–∞–ª–æ —Ç–æ–∫–µ–Ω–∞:', authToken.substring(0, 20) + '...');

        loadData();
    }, []);

    // –û—Ç–ª–∞–¥–∫–∞ WebSocket —Å–æ—Å—Ç–æ—è–Ω–∏—è
    useEffect(() => {
        console.log('üîå WorkshopRequestsTab: WebSocket —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:', {
            isConnected: wsConnected,
            timestamp: new Date().toISOString()
        });

        // –ü—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ WebSocket –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        if (wsConnected) {
            console.log('üîå WorkshopRequestsTab: WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω, –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞');
        }
    }, [wsConnected]);

    const loadData = async () => {
        try {
            console.log('üîÑ WorkshopRequestsTab.loadData: –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö...');
            console.log('üîç WorkshopRequestsTab.loadData: –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', !!localStorage.getItem('authToken'));

            // –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∫–æ–ª—ã —Å –∞–¥—Ä–µ—Å–∞–º–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
            const schoolsResult = await getSchoolsWithAddresses();
            console.log('üè´ WorkshopRequestsTab.loadData: –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —à–∫–æ–ª:', schoolsResult);

            if (schoolsResult?.success && schoolsResult.data) {
                console.log('‚úÖ WorkshopRequestsTab.loadData: –®–∫–æ–ª—ã —Å –∞–¥—Ä–µ—Å–∞–º–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:', schoolsResult.data.length);
                console.log('üè´ WorkshopRequestsTab.loadData: –ü–µ—Ä–≤–∞—è —à–∫–æ–ª–∞:', schoolsResult.data[0]);
                console.log('üè´ WorkshopRequestsTab.loadData: –í—Å–µ —à–∫–æ–ª—ã:', schoolsResult.data);
                setSchoolsWithAddresses(schoolsResult.data);
            } else {
                console.warn('‚ö†Ô∏è WorkshopRequestsTab.loadData: –®–∫–æ–ª—ã —Å –∞–¥—Ä–µ—Å–∞–º–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
                console.warn('‚ö†Ô∏è WorkshopRequestsTab.loadData: –†–µ–∑—É–ª—å—Ç–∞—Ç:', schoolsResult);
                setSchoolsWithAddresses([]);
            }

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞—è–≤–∫–∏
            const requestsResult = await getAllRequests();
            console.log('üìã WorkshopRequestsTab.loadData: –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫:', requestsResult);
            console.log('üìã WorkshopRequestsTab.loadData: –¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', typeof requestsResult);
            console.log('üìã WorkshopRequestsTab.loadData: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', Object.keys(requestsResult || {}));

            if (requestsResult?.success && requestsResult.data) {
                console.log('‚úÖ WorkshopRequestsTab.loadData: –ó–∞—è–≤–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:', requestsResult.data.length);
                console.log('üìã WorkshopRequestsTab.loadData: –ü–µ—Ä–≤–∞—è –∑–∞—è–≤–∫–∞:', requestsResult.data[0]);
                console.log('üìã WorkshopRequestsTab.loadData: –í—Å–µ –∑–∞—è–≤–∫–∏:', requestsResult.data);
                setRequests(requestsResult.data);
            } else if (Array.isArray(requestsResult)) {
                // Fallback –¥–ª—è —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –Ω–∞–ø—Ä—è–º—É—é
                console.log('‚úÖ WorkshopRequestsTab.loadData: –ó–∞—è–≤–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã (–º–∞—Å—Å–∏–≤), –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:', requestsResult.length);
                console.log('üìã WorkshopRequestsTab.loadData: –ü–µ—Ä–≤–∞—è –∑–∞—è–≤–∫–∞:', requestsResult[0]);
                console.log('üìã WorkshopRequestsTab.loadData: –í—Å–µ –∑–∞—è–≤–∫–∏:', requestsResult);
                setRequests(requestsResult);
            } else {
                console.warn('‚ö†Ô∏è WorkshopRequestsTab.loadData: –ó–∞—è–≤–∫–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', requestsResult);
                console.warn('‚ö†Ô∏è WorkshopRequestsTab.loadData: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤');
                setRequests([]);
            }

            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            const statsResult = await getRequestsStats();
            console.log('üìä WorkshopRequestsTab.loadData: –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', statsResult);
            console.log('üìä WorkshopRequestsTab.loadData: –¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', typeof statsResult);

            if (statsResult?.success && statsResult.data) {
                console.log('‚úÖ WorkshopRequestsTab.loadData: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', statsResult.data);
                setStats(statsResult.data);
            } else if (statsResult && typeof statsResult === 'object' && 'total' in statsResult && 'pending' in statsResult && 'approved' in statsResult && 'rejected' in statsResult) {
                // Fallback –¥–ª—è —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞–ø—Ä—è–º—É—é
                console.log('‚úÖ WorkshopRequestsTab.loadData: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ (–æ–±—ä–µ–∫—Ç):', statsResult);
                setStats(statsResult as { total: number; pending: number; approved: number; rejected: number; });
            } else {
                console.warn('‚ö†Ô∏è WorkshopRequestsTab.loadData: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', statsResult);
                console.warn('‚ö†Ô∏è WorkshopRequestsTab.loadData: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω—É–ª–µ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É');
                setStats({ total: 0, pending: 0, approved: 0, rejected: 0 });
            }

            console.log('‚úÖ WorkshopRequestsTab.loadData: –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
            console.log('üìä WorkshopRequestsTab.loadData: –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', {
                requests: requests.length,
                schoolsWithAddresses: schoolsWithAddresses.length,
                stats: stats,
                filteredRequests: filteredRequests.length
            });

            // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
            if (componentError) {
                setComponentError(null);
            }
        } catch (error) {
            console.error('‚ùå WorkshopRequestsTab.loadData: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
            console.error('‚ùå WorkshopRequestsTab.loadData: –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
                name: error.name,
                message: error.message,
                stack: error.stack
            });

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            const errorMessage = error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö';
            setComponentError(errorMessage);
        }
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
    const handleStatusChange = (request: WorkshopRequestWithParent) => {
        setSelectedRequest(request);
        setStatusData({
            status: request.status,
            admin_notes: request.admin_notes || ''
        });
        setIsStatusOpen(true);
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
    const handleSaveStatus = async () => {
        if (!selectedRequest) return;

        console.log('üîç WorkshopRequestsTab.handleSaveStatus: –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞');
        console.log('üìã WorkshopRequestsTab.handleSaveStatus: ID –∑–∞—è–≤–∫–∏:', selectedRequest.id);
        console.log('üìã WorkshopRequestsTab.handleSaveStatus: –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', statusData);

        try {
            const result = await updateRequestStatus(selectedRequest.id, statusData);
            console.log('üìã WorkshopRequestsTab.handleSaveStatus: –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', result);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            if (result && (result.success || (result as unknown as WorkshopRequest).id || (result.data && result.data.id))) {
                console.log('‚úÖ WorkshopRequestsTab.handleSaveStatus: –°—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω:', result);
                toast({
                    title: "–°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω! ‚úÖ",
                    description: "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞",
                });

                // –û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                setRequests(prev => prev.map(req =>
                    req.id === selectedRequest.id
                        ? { ...req, ...statusData, updated_at: new Date().toISOString() }
                        : req
                ));

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
                if (wsConnected) {
                    console.log('üîå WorkshopRequestsTab: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞');
                    const wsMessage = {
                        type: 'workshop_request_status_change',
                        data: {
                            requestId: selectedRequest.id,
                            newStatus: statusData.status,
                            adminNotes: statusData.admin_notes,
                            updatedAt: new Date().toISOString()
                        },
                        timestamp: Date.now()
                    };
                    console.log('üîå WorkshopRequestsTab: WebSocket —Å–æ–æ–±—â–µ–Ω–∏–µ:', wsMessage);

                    const sent = wsSendMessage(wsMessage);
                    console.log('üîå WorkshopRequestsTab: WebSocket —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', sent);
                } else {
                    console.warn('‚ö†Ô∏è WorkshopRequestsTab: WebSocket –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
                }

                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                await updateStats();

                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                setIsStatusOpen(false);
                setSelectedRequest(null);
            } else {
                console.warn('‚ö†Ô∏è WorkshopRequestsTab.handleSaveStatus: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:', result);
                toast({
                    title: "–û—à–∏–±–∫–∞",
                    description: result?.error || "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å",
                    variant: "destructive",
                });
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
            toast({
                title: "–û—à–∏–±–∫–∞",
                description: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞",
                variant: "destructive",
            });
        }
    };

    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const updateStats = async () => {
        try {
            const statsResult = await getRequestsStats();
            if (statsResult?.success && statsResult.data) {
                setStats(statsResult.data);
            } else if (statsResult && typeof statsResult === 'object' && 'total' in statsResult && 'pending' in statsResult && 'approved' in statsResult && 'rejected' in statsResult) {
                setStats(statsResult as { total: number; pending: number; approved: number; rejected: number; });
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        }
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
    const handleDeleteRequest = async (requestId: string) => {
        if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞—è–≤–∫—É?')) return;

        try {
            const result = await deleteRequest(requestId);

            if (result?.success) {
                toast({
                    title: "–ó–∞—è–≤–∫–∞ —É–¥–∞–ª–µ–Ω–∞! üóëÔ∏è",
                    description: "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã",
                });

                // –£–¥–∞–ª—è–µ–º –∏–∑ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                setRequests(prev => prev.filter(req => req.id !== requestId));

                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                const statsResult = await getRequestsStats();
                if (statsResult?.success && statsResult.data) {
                    setStats(statsResult.data);
                }
            } else {
                toast({
                    title: "–û—à–∏–±–∫–∞",
                    description: result?.error || "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É",
                    variant: "destructive",
                });
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏:', error);
            toast({
                title: "–û—à–∏–±–∫–∞",
                description: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏",
                variant: "destructive",
            });
        }
    };

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
    const getStatusColor = (status: string) => {
        switch (status) {
            case 'pending': return 'bg-yellow-100 text-yellow-800 border-yellow-200';
            case 'approved': return 'bg-green-100 text-green-800 border-green-200';
            case 'rejected': return 'bg-red-100 text-red-800 border-red-200';
            default: return 'bg-gray-100 text-gray-800 border-gray-200';
        }
    };

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
    const getStatusIcon = (status: string) => {
        switch (status) {
            case 'pending': return <Clock className="w-4 h-4" />;
            case 'approved': return <CheckCircle className="w-4 h-4" />;
            case 'rejected': return <XCircle className="w-4 h-4" />;
            default: return <AlertCircle className="w-4 h-4" />;
        }
    };

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞
    const getStatusText = (status: string) => {
        switch (status) {
            case 'pending': return '–û–∂–∏–¥–∞–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è';
            case 'approved': return '–û–¥–æ–±—Ä–µ–Ω–æ';
            case 'rejected': return '–û—Ç–∫–ª–æ–Ω–µ–Ω–æ';
            default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        }
    };

    // –†–µ–Ω–¥–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    console.log('üîÑ WorkshopRequestsTab: –†–µ–Ω–¥–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞', {
        requestsCount: requests.length,
        filteredCount: filteredRequests.length,
        stats: stats,
        loading: loading,
        error: error,
        componentError: componentError,
        wsConnected: wsConnected
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    console.log('üîç WorkshopRequestsTab: –î–µ—Ç–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è:', {
        requests: requests,
        filteredRequests: filteredRequests,
        filters: filters,
        uniqueSchools: uniqueSchools,
        uniqueClassGroups: uniqueClassGroups
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    if (componentError) {
        return (
            <div className="space-y-6">
                <Card className="bg-red-50/80 backdrop-blur-sm border-red-200">
                    <CardContent className="p-8 text-center">
                        <div className="text-4xl mb-4">‚ùå</div>
                        <div className="text-lg font-semibold text-red-600 mb-2">
                            –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫
                        </div>
                        <p className="text-red-500 mb-4">
                            {componentError}
                        </p>
                        <Button onClick={loadData} className="bg-red-600 hover:bg-red-700 text-white">
                            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                        </Button>
                    </CardContent>
                </Card>
            </div>
        );
    }

    return (
        <div className="space-y-6">
            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                <Card className="bg-blue-50/80 backdrop-blur-sm border-blue-200">
                    <CardContent className="p-4 text-center">
                        <div className="flex items-center justify-center mb-2">
                            <FileText className="w-6 h-6 text-blue-600 mr-2" />
                            <div className="text-2xl font-bold text-blue-600">{stats.total}</div>
                        </div>
                        <div className="text-sm text-blue-600">–í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫</div>
                    </CardContent>
                </Card>
                <Card className="bg-yellow-50/80 backdrop-blur-sm border-yellow-200">
                    <CardContent className="p-4 text-center">
                        <div className="flex items-center justify-center mb-2">
                            <Clock className="w-6 h-6 text-yellow-600 mr-2" />
                            <div className="text-2xl font-bold text-yellow-600">{stats.pending}</div>
                        </div>
                        <div className="text-sm text-yellow-600">–û–∂–∏–¥–∞—é—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è</div>
                    </CardContent>
                </Card>
                <Card className="bg-green-50/80 backdrop-blur-sm border-green-200">
                    <CardContent className="p-4 text-center">
                        <div className="flex items-center justify-center mb-2">
                            <CheckCircle className="w-6 h-6 text-green-600 mr-2" />
                            <div className="text-2xl font-bold text-green-600">{stats.approved}</div>
                        </div>
                        <div className="text-sm text-green-600">–û–¥–æ–±—Ä–µ–Ω–æ</div>
                    </CardContent>
                </Card>
                <Card className="bg-red-50/80 backdrop-blur-sm border-red-200">
                    <CardContent className="p-4 text-center">
                        <div className="flex items-center justify-center mb-2">
                            <XCircle className="w-6 h-6 text-red-600 mr-2" />
                            <div className="text-2xl font-bold text-red-600">{stats.rejected}</div>
                        </div>
                        <div className="text-sm text-red-600">–û—Ç–∫–ª–æ–Ω–µ–Ω–æ</div>
                    </CardContent>
                </Card>
            </div>

            {/* –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ */}
            <div className="space-y-4">
                <div className="flex items-center justify-between">
                    <div className="flex items-center gap-4">
                        <h2 className="text-2xl font-bold text-gray-800">
                            –ó–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–æ–≤
                        </h2>
                        <div className="flex items-center gap-2">
                            <div className={`w-2 h-2 rounded-full ${wsConnected ? 'bg-green-500' : 'bg-red-500'}`}></div>
                            <span className="text-sm text-gray-600">
                                {wsConnected ? '–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ' : '–†—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ'}
                            </span>
                        </div>
                    </div>
                    <Button
                        onClick={loadData}
                        disabled={loading}
                        variant="outline"
                        className="flex items-center gap-2"
                    >
                        <FileText className="w-4 h-4" />
                        –û–±–Ω–æ–≤–∏—Ç—å
                    </Button>
                </div>

                {/* –§–∏–ª—å—Ç—Ä—ã */}
                <div className="flex flex-col sm:flex-row gap-4 p-4 bg-gray-50/80 rounded-lg border">
                    {/* –§–∏–ª—å—Ç—Ä –ø–æ –≥–æ—Ä–æ–¥—É */}
                    <div className="flex flex-col space-y-2">
                        <label className="text-sm font-medium text-gray-700">–ì–æ—Ä–æ–¥</label>
                        <Select value={filters.city || "all"} onValueChange={(value) => setFilters(prev => ({ ...prev, city: value === "all" ? "" : value }))}>
                            <SelectTrigger className="w-full">
                                <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥" />
                            </SelectTrigger>
                            <SelectContent>
                                <SelectItem value="all">–í—Å–µ –≥–æ—Ä–æ–¥–∞</SelectItem>
                                {uniqueCities.map((city) => (
                                    <SelectItem key={city} value={city}>
                                        {city}
                                    </SelectItem>
                                ))}
                            </SelectContent>
                        </Select>
                    </div>

                    {/* –§–∏–ª—å—Ç—Ä –ø–æ —à–∫–æ–ª–µ */}
                    <div className="flex flex-col space-y-2">
                        <label className="text-sm font-medium text-gray-700">–®–∫–æ–ª–∞</label>
                        <Select value={filters.school || "all"} onValueChange={(value) => setFilters(prev => ({ ...prev, school: value === "all" ? "" : value }))}>
                            <SelectTrigger className="w-full">
                                <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —à–∫–æ–ª—É" />
                            </SelectTrigger>
                            <SelectContent>
                                <SelectItem value="all">–í—Å–µ —à–∫–æ–ª—ã</SelectItem>
                                {filters.city ? getSchoolsForCity(filters.city).map((school) => (
                                    <SelectItem key={school} value={school}>
                                        {school}
                                    </SelectItem>
                                )) : null}
                            </SelectContent>
                        </Select>
                    </div>

                    {/* –§–∏–ª—å—Ç—Ä –ø–æ –∫–ª–∞—Å—Å—É */}
                    <div className="flex flex-col space-y-2">
                        <label className="text-sm font-medium text-gray-700">–ö–ª–∞—Å—Å</label>
                        <Select value={filters.classGroup || "all"} onValueChange={(value) => setFilters(prev => ({ ...prev, classGroup: value === "all" ? "" : value }))}>
                            <SelectTrigger className="w-full">
                                <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å" />
                            </SelectTrigger>
                            <SelectContent>
                                <SelectItem value="all">–í—Å–µ –∫–ª–∞—Å—Å—ã</SelectItem>
                                {filters.school ? getClassesForSchool(filters.school).map((classGroup) => (
                                    <SelectItem key={classGroup} value={classGroup}>
                                        {classGroup}
                                    </SelectItem>
                                )) : null}
                            </SelectContent>
                        </Select>
                    </div>

                    {/* –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É */}
                    <div className="flex flex-col space-y-2">
                        <label className="text-sm font-medium text-gray-700">–°—Ç–∞—Ç—É—Å</label>
                        <Select value={filters.status || "all"} onValueChange={(value) => setFilters(prev => ({ ...prev, status: value === "all" ? "" : value }))}>
                            <SelectTrigger className="w-full">
                                <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å" />
                            </SelectTrigger>
                            <SelectContent>
                                <SelectItem value="all">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</SelectItem>
                                <SelectItem value="pending">–û–∂–∏–¥–∞–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è</SelectItem>
                                <SelectItem value="approved">–û–¥–æ–±—Ä–µ–Ω–æ</SelectItem>
                                <SelectItem value="rejected">–û—Ç–∫–ª–æ–Ω–µ–Ω–æ</SelectItem>
                            </SelectContent>
                        </Select>
                    </div>
                    <div className="flex items-end">
                        <Button
                            variant="outline"
                            onClick={() => setFilters({ city: '', school: '', classGroup: '', status: '' })}
                            className="flex items-center gap-2"
                        >
                            <XCircle className="w-4 h-4" />
                            –°–±—Ä–æ—Å–∏—Ç—å
                        </Button>
                    </div>
                </div>

                {/* –°—á–µ—Ç—á–∏–∫ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ */}
                <div className="text-sm text-gray-600">
                    –ü–æ–∫–∞–∑–∞–Ω–æ {filteredRequests.length} –∏–∑ {requests.length} –∑–∞—è–≤–æ–∫
                    {filters.city || filters.school || filters.classGroup ? (
                        <span className="ml-2 text-blue-600">
                            (–ø—Ä–∏–º–µ–Ω–µ–Ω—ã —Ñ–∏–ª—å—Ç—Ä—ã)
                        </span>
                    ) : null}
                </div>

                {requests.length === 0 ? (
                    <Card className="bg-white/80 backdrop-blur-sm">
                        <CardContent className="p-8 text-center">
                            <div className="text-4xl mb-4">üìã</div>
                            <div className="text-lg font-semibold text-gray-600 mb-2">
                                –ó–∞—è–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç
                            </div>
                            <p className="text-gray-500">
                                –ö–æ–≥–¥–∞ —Ä–æ–¥–∏—Ç–µ–ª–∏ –±—É–¥—É—Ç –ø–æ–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫–∏, –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å
                            </p>
                        </CardContent>
                    </Card>
                ) : (
                    <div className="space-y-4">
                        {filteredRequests.map((request) => (
                            <Card key={request.id} className="hover:shadow-lg transition-all duration-300 bg-white/80 backdrop-blur-sm">
                                <CardHeader className="pb-3">
                                    <div className="flex items-center justify-between">
                                        <div className="flex items-center gap-3">
                                            <div className="flex items-center gap-2">
                                                <MapPin className="w-4 h-4 text-gray-500" />
                                                <span className="font-medium">{request.school_name}</span>
                                            </div>
                                            <div className="flex items-center gap-2">
                                                <GraduationCap className="w-4 h-4 text-gray-500" />
                                                <span className="font-medium">{request.class_group}</span>
                                            </div>
                                        </div>
                                        <Badge className={`${getStatusColor(request.status)} border flex items-center gap-1`}>
                                            {getStatusIcon(request.status)}
                                            {getStatusText(request.status)}
                                        </Badge>
                                    </div>
                                    <CardDescription className="text-gray-600 flex items-center gap-4">
                                        <div className="flex items-center gap-2">
                                            <User className="w-4 h-4" />
                                            <span>
                                                {request.parent_name}
                                                {request.parent_surname && ` ${request.parent_surname}`}
                                            </span>
                                        </div>
                                        {request.parent_phone && (
                                            <div className="flex items-center gap-2">
                                                <Phone className="w-4 h-4" />
                                                <span>{request.parent_phone}</span>
                                            </div>
                                        )}
                                        <div className="flex items-center gap-2">
                                            <Mail className="w-4 h-4" />
                                            <span>{request.parent_email}</span>
                                        </div>
                                        <div className="flex items-center gap-2">
                                            <Calendar className="w-4 h-4" />
                                            <span>{new Date(request.desired_date).toLocaleDateString('ru-RU')}</span>
                                        </div>
                                    </CardDescription>
                                </CardHeader>
                                <CardContent className="space-y-3">
                                    {request.notes && (
                                        <div className="text-sm">
                                            <span className="font-medium text-gray-700">–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:</span>
                                            <div className="text-gray-600 mt-1">{request.notes}</div>
                                        </div>
                                    )}
                                    {request.admin_notes && (
                                        <div className="text-sm">
                                            <span className="font-medium text-gray-700">–ó–∞–º–µ—Ç–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</span>
                                            <div className="text-gray-600 mt-1">{request.admin_notes}</div>
                                        </div>
                                    )}
                                    <div className="text-xs text-gray-500 border-t pt-2">
                                        –°–æ–∑–¥–∞–Ω–æ: {new Date(request.created_at).toLocaleString('ru-RU')}
                                        {request.updated_at !== request.created_at &&
                                            ` ‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${new Date(request.updated_at).toLocaleString('ru-RU')}`
                                        }
                                    </div>
                                    <div className="flex gap-2 pt-2">
                                        <Button
                                            variant="outline"
                                            size="sm"
                                            onClick={() => handleStatusChange(request)}
                                            className="flex items-center gap-1"
                                        >
                                            <FileText className="w-4 h-4" />
                                            –°—Ç–∞—Ç—É—Å
                                        </Button>
                                        <Button
                                            variant="outline"
                                            size="sm"
                                            onClick={() => handleDeleteRequest(request.id)}
                                            className="flex items-center gap-1 text-red-600 hover:text-red-700"
                                        >
                                            <Trash2 className="w-4 h-4" />
                                            –£–¥–∞–ª–∏—Ç—å
                                        </Button>
                                    </div>
                                </CardContent>
                            </Card>
                        ))}
                    </div>
                )}
            </div>



            {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ */}
            <Dialog open={isStatusOpen} onOpenChange={setIsStatusOpen}>
                <DialogContent className="sm:max-w-[500px]">
                    <DialogHeader>
                        <DialogTitle className="text-xl font-bold text-gray-900">
                            –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
                        </DialogTitle>
                        <DialogDescription>
                            –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –∏ –¥–æ–±–∞–≤—å—Ç–µ –∑–∞–º–µ—Ç–∫–∏
                        </DialogDescription>
                    </DialogHeader>
                    <div className="space-y-4">
                        <div>
                            <span className="font-medium text-gray-700">–†–æ–¥–∏—Ç–µ–ª—å:</span>
                            <div className="text-gray-600">
                                {selectedRequest?.parent_name}
                                {selectedRequest?.parent_surname && ` ${selectedRequest.parent_surname}`}
                            </div>
                        </div>
                        {selectedRequest?.parent_phone && (
                            <div>
                                <span className="font-medium text-gray-700">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
                                <div className="text-gray-600">{selectedRequest.parent_phone}</div>
                            </div>
                        )}
                        <div>
                            <span className="font-medium text-gray-700">Email:</span>
                            <div className="text-gray-600">{selectedRequest?.parent_email}</div>
                        </div>
                        <div>
                            <span className="font-medium text-gray-700">–®–∫–æ–ª–∞:</span>
                            <div className="text-gray-600">{selectedRequest?.school_name}</div>
                        </div>
                        <div>
                            <span className="font-medium text-gray-700">–ö–ª–∞—Å—Å:</span>
                            <div className="text-gray-600">{selectedRequest?.class_group}</div>
                        </div>
                        <div>
                            <span className="font-medium text-gray-700">–°—Ç–∞—Ç—É—Å:</span>
                            <Select value={statusData.status} onValueChange={(value) => setStatusData(prev => ({ ...prev, status: value as 'pending' | 'approved' | 'rejected' }))}>
                                <SelectTrigger>
                                    <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å" />
                                </SelectTrigger>
                                <SelectContent>
                                    <SelectItem value="pending">–û–∂–∏–¥–∞–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è</SelectItem>
                                    <SelectItem value="approved">–û–¥–æ–±—Ä–µ–Ω–æ</SelectItem>
                                    <SelectItem value="rejected">–û—Ç–∫–ª–æ–Ω–µ–Ω–æ</SelectItem>
                                </SelectContent>
                            </Select>
                        </div>
                        <div>
                            <span className="font-medium text-gray-700">–ó–∞–º–µ—Ç–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</span>
                            <Textarea
                                value={statusData.admin_notes}
                                onChange={(e) => setStatusData(prev => ({ ...prev, admin_notes: e.target.value }))}
                                placeholder="–î–æ–±–∞–≤—å—Ç–µ –∑–∞–º–µ—Ç–∫–∏ –ø–æ –∑–∞—è–≤–∫–µ..."
                                className="mt-1"
                                rows={3}
                            />
                        </div>
                        <div className="flex justify-end space-x-2 pt-4">
                            <Button
                                variant="outline"
                                onClick={() => setIsStatusOpen(false)}
                            >
                                –û—Ç–º–µ–Ω–∞
                            </Button>
                            <Button
                                onClick={handleSaveStatus}
                                className="bg-gradient-to-r from-orange-500 to-purple-500 hover:from-orange-600 hover:to-purple-600 text-white"
                            >
                                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                            </Button>
                        </div>
                    </div>
                </DialogContent>
            </Dialog>
        </div>
    );
}

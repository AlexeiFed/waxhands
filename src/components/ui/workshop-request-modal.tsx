/**
 * @file: src/components/ui/workshop-request-modal.tsx
 * @description: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞
 * @dependencies: Dialog, Button, Input, Label, Select, useWorkshopRequests, useToast
 * @created: 2024-12-19
 */

import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Textarea } from '@/components/ui/textarea';
import { useWorkshopRequests } from '@/hooks/use-workshop-requests';
import { useToast } from '@/hooks/use-toast';
import { useAuth } from '@/contexts/AuthContext';
import { useSchools } from '@/hooks/use-schools';
import { Calendar, MapPin, GraduationCap, FileText, AlertCircle } from 'lucide-react';

interface WorkshopRequestModalProps {
    isOpen: boolean;
    onOpenChange: (open: boolean) => void;
}

export default function WorkshopRequestModal({ isOpen, onOpenChange }: WorkshopRequestModalProps) {
    const { user } = useAuth();
    const { schools } = useSchools();
    const { createRequest, loading } = useWorkshopRequests();
    const { toast } = useToast();

    const [formData, setFormData] = useState({
        school_name: '',
        class_group: '',
        desired_date: '',
        notes: ''
    });

    const [selectedSchoolId, setSelectedSchoolId] = useState<string>('');
    const [availableClasses, setAvailableClasses] = useState<string[]>([]);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —à–∫–æ–ª—ã
    const handleSchoolChange = (schoolId: string) => {
        setSelectedSchoolId(schoolId);
        setFormData(prev => ({ ...prev, school_name: '', class_group: '' }));

        const school = schools.find(s => s.id === schoolId);
        if (school) {
            setAvailableClasses(school.classes);
            setFormData(prev => ({ ...prev, school_name: school.name }));
        }
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞
    const handleClassChange = (className: string) => {
        setFormData(prev => ({ ...prev, class_group: className }));
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();

        if (!user?.id) {
            toast({
                title: "–û—à–∏–±–∫–∞",
                description: "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É",
                variant: "destructive",
            });
            return;
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!formData.school_name || !formData.class_group || !formData.desired_date) {
            toast({
                title: "–û—à–∏–±–∫–∞",
                description: "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è",
                variant: "destructive",
            });
            return;
        }

        try {
            console.log('üîç WorkshopRequestModal.handleSubmit: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É:', {
                parent_id: user.id,
                school_name: formData.school_name,
                class_group: formData.class_group,
                desired_date: formData.desired_date,
                notes: formData.notes || undefined
            });

            const result = await createRequest({
                parent_id: user.id,
                school_name: formData.school_name,
                class_group: formData.class_group,
                desired_date: formData.desired_date,
                notes: formData.notes || undefined
            });

            console.log('üìã WorkshopRequestModal.handleSubmit: –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏:', result);
            console.log('üîç WorkshopRequestModal.handleSubmit: –ü—Ä–æ–≤–µ—Ä—è–µ–º result?.success:', result?.success);
            console.log('üîç WorkshopRequestModal.handleSubmit: –¢–∏–ø result:', typeof result);
            console.log('üîç WorkshopRequestModal.handleSubmit: result === null:', result === null);
            console.log('üîç WorkshopRequestModal.handleSubmit: result === undefined:', result === undefined);

            if (result && result.success) {
                toast({
                    title: "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! üéâ",
                    description: "–ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à—É –∑–∞—è–≤–∫—É –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è",
                });

                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
                setFormData({
                    school_name: '',
                    class_group: '',
                    desired_date: '',
                    notes: ''
                });
                setSelectedSchoolId('');
                setAvailableClasses([]);

                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                onOpenChange(false);
            } else if (result && result.id) {
                // Fallback: –µ—Å–ª–∏ API –≤–µ—Ä–Ω—É–ª –æ–±—ä–µ–∫—Ç —Å ID, —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –∑–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ
                console.log('‚úÖ WorkshopRequestModal.handleSubmit: Fallback - –∑–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ (–µ—Å—Ç—å ID):', result);
                toast({
                    title: "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! üéâ",
                    description: "–ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à—É –∑–∞—è–≤–∫—É –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è",
                });

                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
                setFormData({
                    school_name: '',
                    class_group: '',
                    desired_date: '',
                    notes: ''
                });
                setSelectedSchoolId('');
                setAvailableClasses([]);

                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                onOpenChange(false);
            } else {
                console.warn('‚ö†Ô∏è WorkshopRequestModal.handleSubmit: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:', result);
                toast({
                    title: "–û—à–∏–±–∫–∞",
                    description: result?.error || "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É",
                    variant: "destructive",
                });
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏:', error);
            toast({
                title: "–û—à–∏–±–∫–∞",
                description: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏",
                variant: "destructive",
            });
        }
    };

    // –ü–æ–ª—É—á–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–∞—Ç—É (—Å–µ–≥–æ–¥–Ω—è)
    const today = new Date().toISOString().split('T')[0];

    return (
        <Dialog open={isOpen} onOpenChange={onOpenChange}>
            <DialogContent className="sm:max-w-[500px] max-h-[90vh] overflow-y-auto">
                <DialogHeader>
                    <DialogTitle className="text-xl font-bold text-gray-900 flex items-center gap-2">
                        <FileText className="w-5 h-5 text-orange-500" />
                        –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞
                    </DialogTitle>
                    <DialogDescription className="text-sm text-gray-600 mt-1">
                        –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É, –∏ –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞ –≤ –≤–∞—à–µ–º –∫–ª–∞—Å—Å–µ
                    </DialogDescription>
                </DialogHeader>

                <form onSubmit={handleSubmit} className="space-y-5 py-2">
                    {/* –®–∫–æ–ª–∞ */}
                    <div className="space-y-2">
                        <Label htmlFor="school" className="text-sm font-semibold text-gray-700 flex items-center gap-2">
                            <MapPin className="w-4 h-4" />
                            –®–∫–æ–ª–∞/—Å–∞–¥ *
                        </Label>
                        <Select onValueChange={handleSchoolChange} value={selectedSchoolId}>
                            <SelectTrigger className="h-10 text-sm border-gray-200 focus:border-orange-400 focus:ring-orange-400/20">
                                <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —à–∫–æ–ª—É –∏–ª–∏ —Å–∞–¥" />
                            </SelectTrigger>
                            <SelectContent>
                                {schools.map((school) => (
                                    <SelectItem key={school.id} value={school.id}>
                                        <div>
                                            <div className="font-medium">{school.name}</div>
                                            <div className="text-sm text-gray-500">{school.address}</div>
                                        </div>
                                    </SelectItem>
                                ))}
                            </SelectContent>
                        </Select>
                        {!selectedSchoolId && (
                            <p className="text-sm text-gray-500">
                                –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–≤–æ—é —à–∫–æ–ª—É, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
                            </p>
                        )}
                    </div>

                    {/* –ö–ª–∞—Å—Å */}
                    <div className="space-y-2">
                        <Label htmlFor="class" className="text-sm font-semibold text-gray-700 flex items-center gap-2">
                            <GraduationCap className="w-4 h-4" />
                            –ö–ª–∞—Å—Å/–≥—Ä—É–ø–ø–∞ *
                        </Label>
                        <Select
                            onValueChange={handleClassChange}
                            value={formData.class_group}
                            disabled={!selectedSchoolId}
                        >
                            <SelectTrigger className="h-10 text-sm border-gray-200 focus:border-orange-400 focus:ring-orange-400/20 disabled:opacity-50">
                                <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –∏–ª–∏ –≥—Ä—É–ø–ø—É" />
                            </SelectTrigger>
                            <SelectContent>
                                {availableClasses.map((className) => (
                                    <SelectItem key={className} value={className}>
                                        {className}
                                    </SelectItem>
                                ))}
                            </SelectContent>
                        </Select>
                        {!selectedSchoolId && (
                            <p className="text-sm text-gray-500">–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —à–∫–æ–ª—É</p>
                        )}
                        {selectedSchoolId && availableClasses.length === 0 && (
                            <p className="text-sm text-gray-500">
                                –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–≤–æ–π –∫–ª–∞—Å—Å, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
                            </p>
                        )}
                    </div>

                    {/* –ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞ */}
                    <div className="space-y-2">
                        <Label htmlFor="date" className="text-sm font-semibold text-gray-700 flex items-center gap-2">
                            <Calendar className="w-4 h-4" />
                            –ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞ *
                        </Label>
                        <Input
                            id="date"
                            type="date"
                            min={today}
                            value={formData.desired_date}
                            onChange={(e) => setFormData(prev => ({ ...prev, desired_date: e.target.value }))}
                            className="h-10 text-sm border-gray-200 focus:border-orange-400 focus:ring-orange-400/20"
                            required
                        />
                        <p className="text-xs text-gray-500">
                            –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –Ω–µ —Ä–∞–Ω–µ–µ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è
                        </p>
                    </div>

                    {/* –ü—Ä–∏–º–µ—á–∞–Ω–∏—è */}
                    <div className="space-y-2">
                        <Label htmlFor="notes" className="text-sm font-semibold text-gray-700">
                            –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                        </Label>
                        <Textarea
                            id="notes"
                            placeholder="–£–∫–∞–∂–∏—Ç–µ –ª—é–±—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è..."
                            value={formData.notes}
                            onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}
                            className="min-h-[80px] text-sm border-gray-200 focus:border-orange-400 focus:ring-orange-400/20"
                            rows={3}
                        />
                        <p className="text-xs text-gray-500">
                            –ù–∞–ø—Ä–∏–º–µ—Ä: –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π, –æ—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è
                        </p>
                    </div>

                    {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ */}
                    <div className="bg-blue-50 border border-blue-200 rounded-lg p-3">
                        <div className="flex items-start gap-2">
                            <AlertCircle className="w-4 h-4 text-blue-600 mt-0.5 flex-shrink-0" />
                            <div className="text-sm text-blue-800">
                                <p className="font-medium mb-1">–í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:</p>
                                <ul className="space-y-1 text-xs">
                                    <li>‚Ä¢ –ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à—É –∑–∞—è–≤–∫—É –≤ —Ç–µ—á–µ–Ω–∏–µ 2-3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π</li>
                                    <li>‚Ä¢ –°–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π</li>
                                    <li>‚Ä¢ –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–≤–æ—é —à–∫–æ–ª—É –∏–ª–∏ –∫–ª–∞—Å—Å, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É</li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    {/* –ö–Ω–æ–ø–∫–∏ */}
                    <div className="flex justify-end space-x-3 pt-4 border-t border-gray-100">
                        <Button
                            type="button"
                            variant="outline"
                            onClick={() => onOpenChange(false)}
                            className="h-10 px-6 text-sm border-gray-300 text-gray-700 hover:bg-gray-50"
                        >
                            –û—Ç–º–µ–Ω–∞
                        </Button>
                        <Button
                            type="submit"
                            disabled={loading || !formData.school_name || !formData.class_group || !formData.desired_date}
                            className="h-10 px-6 text-sm bg-gradient-to-r from-orange-500 to-purple-500 hover:from-orange-600 hover:to-purple-600 text-white font-medium disabled:opacity-50"
                        >
                            {loading ? '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'}
                        </Button>
                    </div>
                </form>
            </DialogContent>
        </Dialog>
    );
}

/**
 * @file: src/components/ui/parent-onboarding-modal.tsx
 * @description: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è
 * @dependencies: Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, Button
 * @created: 2024-12-19
 */

import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from "@/components/ui/dialog";

interface ParentOnboardingModalProps {
    isOpen: boolean;
    onOpenChange: (open: boolean) => void;
}

const ParentOnboardingModal = ({ isOpen, onOpenChange }: ParentOnboardingModalProps) => {
    const [step, setStep] = useState(0);

    const slides = [
        {
            title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å—Ç—É–¥–∏—é! ‚ú®',
            text: '–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à–∏ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –¥–ª—è –≤–∞—à–∏—Ö –¥–µ—Ç–µ–π. –î–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å —Ç–µ–º, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç.',
            icon: 'üé®'
        },
        {
            title: '–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å —Ä–µ–±–µ–Ω–∫–∞? üìù',
            text: '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å, –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è –∫–ª–∞—Å—Å–∞ –≤–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞, –∏ –Ω–∞–∂–º–∏—Ç–µ "–ó–∞–ø–∏—Å–∞—Ç—å –¥–µ—Ç–µ–π". –ú—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–¥–∏–º —Å—á–µ—Ç–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã.',
            icon: 'üìã'
        },
        {
            title: '–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–∞–ª—å—à–µ? ‚è≥',
            text: '–ü–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å—á–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –¥–µ—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±—É–¥—É—Ç –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å.',
            icon: 'üí≥'
        },
        {
            title: '–ù–∞ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–µ üéØ',
            text: '–î–µ—Ç–∏ —Å–æ–∑–¥–∞—é—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≤–æ—Å–∫–æ–≤—ã–µ —Ä—É—á–∫–∏ –ø–æ–¥ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º –Ω–∞—à–∏—Ö –æ–ø—ã—Ç–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤. –í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –±–µ–∑–æ–ø–∞—Å–Ω—ã –∏ –≥–∏–ø–æ–∞–ª–ª–µ—Ä–≥–µ–Ω–Ω—ã.',
            icon: 'üé≠'
        },
        {
            title: '–ì–æ—Ç–æ–≤–æ! üéâ',
            text: '–ß–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç —É –∫–∞–∂–¥–æ–≥–æ —Ä–µ–±–µ–Ω–∫–∞ –±—É–¥–µ—Ç —Å–≤–æ—è –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º–∞—è –≤–æ—Å–∫–æ–≤–∞—è —Ä—É—á–∫–∞ - –æ—Ç–ª–∏—á–Ω—ã–π —Å—É–≤–µ–Ω–∏—Ä –∏ –ø–∞–º—è—Ç—å –æ –≤–µ—Å–µ–ª–æ–º –≤—Ä–µ–º—è–ø—Ä–µ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–∏!',
            icon: 'üèÜ'
        }
    ];

    const currentSlide = slides[Math.min(step, slides.length - 1)];

    const handleNext = () => {
        if (step < slides.length - 1) {
            setStep(step + 1);
        } else {
            onOpenChange(false);
            setStep(0);
        }
    };

    const handleBack = () => {
        if (step > 0) {
            setStep(step - 1);
        }
    };

    const handleSkip = () => {
        onOpenChange(false);
        setStep(0);
    };

    return (
        <Dialog open={isOpen} onOpenChange={onOpenChange}>
            <DialogContent className="max-w-2xl">
                <DialogHeader className="text-center">
                    <DialogTitle className="text-2xl sm:text-3xl flex items-center justify-center space-x-2">
                        <span className="text-4xl">{currentSlide.icon}</span>
                        <span>{currentSlide.title}</span>
                    </DialogTitle>
                    <DialogDescription className="text-base sm:text-lg leading-relaxed mt-4">
                        {currentSlide.text}
                    </DialogDescription>
                </DialogHeader>

                <div className="space-y-6">
                    {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ */}
                    <div className="flex justify-center gap-2">
                        {slides.map((_, idx) => (
                            <div
                                key={idx}
                                className={`h-3 w-3 rounded-full transition-all duration-200 ${idx === step ? 'bg-orange-500 scale-110' : 'bg-orange-200'
                                    }`}
                            />
                        ))}
                    </div>

                    {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
                    <div className="flex flex-col sm:flex-row gap-3 justify-center">
                        {step > 0 && (
                            <Button
                                variant="outline"
                                onClick={handleBack}
                                className="flex-1 sm:flex-none min-w-[120px]"
                            >
                                –ù–∞–∑–∞–¥
                            </Button>
                        )}

                        <Button
                            variant="secondary"
                            onClick={handleSkip}
                            className="flex-1 sm:flex-none min-w-[120px]"
                        >
                            –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
                        </Button>

                        <Button
                            className="bg-gradient-to-r from-orange-500 to-purple-500 text-white hover:from-orange-600 hover:to-purple-600 flex-1 sm:flex-none min-w-[120px]"
                            onClick={handleNext}
                        >
                            {step < slides.length - 1 ? '–î–∞–ª–µ–µ' : '–ù–∞—á–∞—Ç—å!'}
                        </Button>
                    </div>
                </div>
            </DialogContent>
        </Dialog>
    );
};

export default ParentOnboardingModal;

